// Generated by view binder compiler. Do not edit!
package com.example.community.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CalendarView;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.community.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityNewOfferFormBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CalendarView bestBeforeInput;

  @NonNull
  public final TextView bestBeforeLabel;

  @NonNull
  public final Button createOfferButton;

  @NonNull
  public final TextView createOfferQuantity;

  @NonNull
  public final TextView createOfferTitle;

  @NonNull
  public final EditText descriptionInput;

  @NonNull
  public final TextView descriptionLabel;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final TextView offerName;

  @NonNull
  public final EditText offerNameInput;

  @NonNull
  public final EditText pickupLocationInput;

  @NonNull
  public final TextView pickupLocationLabel;

  @NonNull
  public final EditText quantityInput;

  @NonNull
  public final TextView selectTagsLabel;

  @NonNull
  public final Button uploadButton;

  @NonNull
  public final TextView uploadPhotoLabel;

  private ActivityNewOfferFormBinding(@NonNull ConstraintLayout rootView,
      @NonNull CalendarView bestBeforeInput, @NonNull TextView bestBeforeLabel,
      @NonNull Button createOfferButton, @NonNull TextView createOfferQuantity,
      @NonNull TextView createOfferTitle, @NonNull EditText descriptionInput,
      @NonNull TextView descriptionLabel, @NonNull ImageView imageView, @NonNull TextView offerName,
      @NonNull EditText offerNameInput, @NonNull EditText pickupLocationInput,
      @NonNull TextView pickupLocationLabel, @NonNull EditText quantityInput,
      @NonNull TextView selectTagsLabel, @NonNull Button uploadButton,
      @NonNull TextView uploadPhotoLabel) {
    this.rootView = rootView;
    this.bestBeforeInput = bestBeforeInput;
    this.bestBeforeLabel = bestBeforeLabel;
    this.createOfferButton = createOfferButton;
    this.createOfferQuantity = createOfferQuantity;
    this.createOfferTitle = createOfferTitle;
    this.descriptionInput = descriptionInput;
    this.descriptionLabel = descriptionLabel;
    this.imageView = imageView;
    this.offerName = offerName;
    this.offerNameInput = offerNameInput;
    this.pickupLocationInput = pickupLocationInput;
    this.pickupLocationLabel = pickupLocationLabel;
    this.quantityInput = quantityInput;
    this.selectTagsLabel = selectTagsLabel;
    this.uploadButton = uploadButton;
    this.uploadPhotoLabel = uploadPhotoLabel;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityNewOfferFormBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityNewOfferFormBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_new_offer_form, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityNewOfferFormBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.best_before_input;
      CalendarView bestBeforeInput = ViewBindings.findChildViewById(rootView, id);
      if (bestBeforeInput == null) {
        break missingId;
      }

      id = R.id.best_before_label;
      TextView bestBeforeLabel = ViewBindings.findChildViewById(rootView, id);
      if (bestBeforeLabel == null) {
        break missingId;
      }

      id = R.id.create_offer_button;
      Button createOfferButton = ViewBindings.findChildViewById(rootView, id);
      if (createOfferButton == null) {
        break missingId;
      }

      id = R.id.create_offer_quantity;
      TextView createOfferQuantity = ViewBindings.findChildViewById(rootView, id);
      if (createOfferQuantity == null) {
        break missingId;
      }

      id = R.id.create_offer_title;
      TextView createOfferTitle = ViewBindings.findChildViewById(rootView, id);
      if (createOfferTitle == null) {
        break missingId;
      }

      id = R.id.description_input;
      EditText descriptionInput = ViewBindings.findChildViewById(rootView, id);
      if (descriptionInput == null) {
        break missingId;
      }

      id = R.id.description_label;
      TextView descriptionLabel = ViewBindings.findChildViewById(rootView, id);
      if (descriptionLabel == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.offer_name;
      TextView offerName = ViewBindings.findChildViewById(rootView, id);
      if (offerName == null) {
        break missingId;
      }

      id = R.id.offer_name_input;
      EditText offerNameInput = ViewBindings.findChildViewById(rootView, id);
      if (offerNameInput == null) {
        break missingId;
      }

      id = R.id.pickup_location_input;
      EditText pickupLocationInput = ViewBindings.findChildViewById(rootView, id);
      if (pickupLocationInput == null) {
        break missingId;
      }

      id = R.id.pickup_location_label;
      TextView pickupLocationLabel = ViewBindings.findChildViewById(rootView, id);
      if (pickupLocationLabel == null) {
        break missingId;
      }

      id = R.id.quantity_input;
      EditText quantityInput = ViewBindings.findChildViewById(rootView, id);
      if (quantityInput == null) {
        break missingId;
      }

      id = R.id.select_tags_label;
      TextView selectTagsLabel = ViewBindings.findChildViewById(rootView, id);
      if (selectTagsLabel == null) {
        break missingId;
      }

      id = R.id.upload_button;
      Button uploadButton = ViewBindings.findChildViewById(rootView, id);
      if (uploadButton == null) {
        break missingId;
      }

      id = R.id.upload_photo_label;
      TextView uploadPhotoLabel = ViewBindings.findChildViewById(rootView, id);
      if (uploadPhotoLabel == null) {
        break missingId;
      }

      return new ActivityNewOfferFormBinding((ConstraintLayout) rootView, bestBeforeInput,
          bestBeforeLabel, createOfferButton, createOfferQuantity, createOfferTitle,
          descriptionInput, descriptionLabel, imageView, offerName, offerNameInput,
          pickupLocationInput, pickupLocationLabel, quantityInput, selectTagsLabel, uploadButton,
          uploadPhotoLabel);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
