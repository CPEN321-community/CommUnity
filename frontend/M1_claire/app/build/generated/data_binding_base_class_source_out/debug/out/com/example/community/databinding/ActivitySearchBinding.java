// Generated by view binder compiler. Do not edit!
package com.example.community.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.Switch;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.community.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySearchBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final View divider;

  @NonNull
  public final View divider2;

  @NonNull
  public final FragmentTagsBinding include;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final ListView offerPostResultList;

  @NonNull
  public final Switch reqOrOfferSwitch;

  @NonNull
  public final ListView reqPostResultList;

  @NonNull
  public final TextView searchForLabel;

  @NonNull
  public final EditText searchTextInput;

  @NonNull
  public final ImageButton submitSearchButton;

  private ActivitySearchBinding(@NonNull ConstraintLayout rootView, @NonNull View divider,
      @NonNull View divider2, @NonNull FragmentTagsBinding include,
      @NonNull LinearLayout linearLayout, @NonNull ListView offerPostResultList,
      @NonNull Switch reqOrOfferSwitch, @NonNull ListView reqPostResultList,
      @NonNull TextView searchForLabel, @NonNull EditText searchTextInput,
      @NonNull ImageButton submitSearchButton) {
    this.rootView = rootView;
    this.divider = divider;
    this.divider2 = divider2;
    this.include = include;
    this.linearLayout = linearLayout;
    this.offerPostResultList = offerPostResultList;
    this.reqOrOfferSwitch = reqOrOfferSwitch;
    this.reqPostResultList = reqPostResultList;
    this.searchForLabel = searchForLabel;
    this.searchTextInput = searchTextInput;
    this.submitSearchButton = submitSearchButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySearchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySearchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_search, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySearchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.divider;
      View divider = ViewBindings.findChildViewById(rootView, id);
      if (divider == null) {
        break missingId;
      }

      id = R.id.divider2;
      View divider2 = ViewBindings.findChildViewById(rootView, id);
      if (divider2 == null) {
        break missingId;
      }

      id = R.id.include;
      View include = ViewBindings.findChildViewById(rootView, id);
      if (include == null) {
        break missingId;
      }
      FragmentTagsBinding binding_include = FragmentTagsBinding.bind(include);

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.offer_post_result_list;
      ListView offerPostResultList = ViewBindings.findChildViewById(rootView, id);
      if (offerPostResultList == null) {
        break missingId;
      }

      id = R.id.req_or_offer_switch;
      Switch reqOrOfferSwitch = ViewBindings.findChildViewById(rootView, id);
      if (reqOrOfferSwitch == null) {
        break missingId;
      }

      id = R.id.req_post_result_list;
      ListView reqPostResultList = ViewBindings.findChildViewById(rootView, id);
      if (reqPostResultList == null) {
        break missingId;
      }

      id = R.id.search_for_label;
      TextView searchForLabel = ViewBindings.findChildViewById(rootView, id);
      if (searchForLabel == null) {
        break missingId;
      }

      id = R.id.search_text_input;
      EditText searchTextInput = ViewBindings.findChildViewById(rootView, id);
      if (searchTextInput == null) {
        break missingId;
      }

      id = R.id.submit_search_button;
      ImageButton submitSearchButton = ViewBindings.findChildViewById(rootView, id);
      if (submitSearchButton == null) {
        break missingId;
      }

      return new ActivitySearchBinding((ConstraintLayout) rootView, divider, divider2,
          binding_include, linearLayout, offerPostResultList, reqOrOfferSwitch, reqPostResultList,
          searchForLabel, searchTextInput, submitSearchButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
