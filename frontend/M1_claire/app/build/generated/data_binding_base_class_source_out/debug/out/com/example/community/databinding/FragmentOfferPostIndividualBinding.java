// Generated by view binder compiler. Do not edit!
package com.example.community.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.community.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentOfferPostIndividualBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView offerImage;

  @NonNull
  public final TextView offerItemName;

  @NonNull
  public final TextView offerPickupLoc;

  @NonNull
  public final TextView offerQuantity;

  private FragmentOfferPostIndividualBinding(@NonNull LinearLayout rootView,
      @NonNull ImageView offerImage, @NonNull TextView offerItemName,
      @NonNull TextView offerPickupLoc, @NonNull TextView offerQuantity) {
    this.rootView = rootView;
    this.offerImage = offerImage;
    this.offerItemName = offerItemName;
    this.offerPickupLoc = offerPickupLoc;
    this.offerQuantity = offerQuantity;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentOfferPostIndividualBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentOfferPostIndividualBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_offer_post_individual, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentOfferPostIndividualBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.offer_image;
      ImageView offerImage = ViewBindings.findChildViewById(rootView, id);
      if (offerImage == null) {
        break missingId;
      }

      id = R.id.offer_item_name;
      TextView offerItemName = ViewBindings.findChildViewById(rootView, id);
      if (offerItemName == null) {
        break missingId;
      }

      id = R.id.offer_pickup_loc;
      TextView offerPickupLoc = ViewBindings.findChildViewById(rootView, id);
      if (offerPickupLoc == null) {
        break missingId;
      }

      id = R.id.offer_quantity;
      TextView offerQuantity = ViewBindings.findChildViewById(rootView, id);
      if (offerQuantity == null) {
        break missingId;
      }

      return new FragmentOfferPostIndividualBinding((LinearLayout) rootView, offerImage,
          offerItemName, offerPickupLoc, offerQuantity);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
